# This file is managed with Chef. For changes to persist, edit http_platform/templates/site-ssl.erb

<VirtualHost *:443>
  ServerName <%= @params[:www_server_name] %>
  ServerAlias <%= @params[:plain_server_name] %>
  ServerAdmin <%= node['http_platform']['admin_email'] %>
  DocumentRoot <%= node['http_platform']['www']['document_root'] %>

  <% if node['platform_family'] == 'debian' -%>
  ErrorLog ${APACHE_LOG_DIR}/error.log
  CustomLog ${APACHE_LOG_DIR}/access.log combined
  <% else -%>
  ErrorLog logs/error.log
  CustomLog logs/access.log combined
  <% end -%>

  SSLEngine on
  SSLCertificateFile <%= @params[:path_to_cert] %>
  SSLCertificateKeyFile <%= @params[:path_to_key] %>

  #SSLCertificateChainFile /etc/apache2/ssl.crt/server-ca.crt

  #SSLCACertificatePath /etc/ssl/certs/
  #SSLCACertificateFile /etc/apache2/ssl.crt/ca-bundle.crt

  #SSLCARevocationPath /etc/apache2/ssl.crl/
  #SSLCARevocationFile /etc/apache2/ssl.crl/ca-bundle.crl

  # Types are none, optional, require and optional_no_ca.
  #SSLVerifyClient require
  #SSLVerifyDepth 10

  # Set various options for the SSL engine.
  #SSLOptions +StrictRequire +SSLRequireSSL

  <% unless node['http_platform']['www']['rewrite_rules'].empty? -%>
  RewriteEngine on
  <% end -%>

  <% node['http_platform']['www']['rewrite_rules'].each do |rule| -%>
  <% unless rule['comment'].nil? -%><%= rule['comment'] %><% end -%>
  RewriteRule <%= rule['url_regex'] %> <%= rule['path_regex'] %><% unless rule['flags'].nil? -%> <%= rule['flags'] %><% end -%>
  <% end -%>

  <% node['http_platform']['www']['access_directories'].each do |dir, _| -%>
  <Directory <%= dir %>>
    Require all granted
  </Directory>
  <% end -%>

  <FilesMatch "\.(cgi|shtml|phtml|php)$">
    SSLOptions +StdEnvVars
  </FilesMatch>

  <Directory /usr/lib/cgi-bin>
    SSLOptions +StdEnvVars
  </Directory>

  <IfModule mod_php.c>
    <FilesMatch "\.php$">
    SetHandler application/x-httpd-php
    </FilesMatch>
  </IfModule>
</VirtualHost>
